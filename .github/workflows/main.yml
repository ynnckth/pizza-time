name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Print build version information
        run: |
          echo Build number: ${{ github.run_id }}.${{ github.run_number }}.${{ github.run_attempt }}
          echo Commit hash: $(git rev-parse --short "$GITHUB_SHA")

      - name: Generate order-service API client code
        run: ./openapi-codegen.sh

      - name: Install frontend dependencies
        run: | 
          cd frontend
          npm install

      - name: Run frontend unit and integration tests
        run: |
          cd frontend
          CI=true npm test

      - name: Run frontend e2e tests
        run: |
          cd frontend
          npm run build
          npm run serve
          npm run cypress:run -- --config baseUrl=http://localhost:8000

  # TODO: currently frontend and backend are always deployed together -> check how to decouple this based on the changed files
  deploy-backend:
    runs-on: ubuntu-latest
    needs: [test-frontend]
    steps:
      - uses: actions/checkout@v3

      - name: Deploy dockerized backend to Heroku
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          dockerfile_directory: ./order-service

  deploy-frontend:
    runs-on: ubuntu-latest
#    needs: [test-frontend]
    steps:
      - uses: actions/checkout@v3

      - name: Generate order-service API client code
        run: ./openapi-codegen.sh

      - name: Determine and set build version and commit hash
        run: |
          echo "BUILD_VERSION=${{ github.run_id }}.${{ github.run_number }}.${{ github.run_attempt }}" >> $GITHUB_ENV
          echo "COMMIT_HASH=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

      # Vercel only knows the following environments: development | preview | production
      - name: Deploy frontend to Vercel
        run: |
          cd frontend
          npx vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          npx vercel --build-env REACT_APP_ORDER_SERVICE_API_BASE_URL=https://pizza-time-backend.herokuapp.com --build-env BUILD_VERSION=${{ env.BUILD_VERSION }} --build-env COMMIT_HASH=${{ env.COMMIT_HASH }} --token=${{ secrets.VERCEL_TOKEN }}
          npx vercel build --token=${{ secrets.VERCEL_TOKEN }}
          npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  e2e-environment-tests:
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    steps:
      - uses: actions/checkout@v3
      - name: Run environment e2e tests
        run: |
          cd frontend
          npm install
          npm run cypress:run -- --config baseUrl=${{ secrets.VERCEL_APP_URL }} --env stubbedNetworkRequests=false

  # TODO: a production release should follow after successfully passing the e2e-environment-tests on the previous environments
